int x = foo();  /* Arbitrary vlaue */
int y = bar();  /* Arbitrary vlaue */

unsigned ux = x;
unsigned uy = y;

A. (x > 0) || (x - 1 < 0)  
x > 0时为真，x <= 0时，(x - 1 < 0)也为真

B. (x & 7) != 7 || (x << 29 < 0) 
7 => 0111，x & 7等于保留x的低三位，其他位全部置为0，如果(x & 7) != 7表面x低三位不都为1
(x << 29 < 0)表示将低三位提到高三位，如果满足条件，则表明最高位为1，也就是原x的倒数第三位为1
不满足此表达式的x的低三位可以为：000、001、010、011，比如x取0x0就不符合表达式

C. (x * x) >= 0
只要保证x * x得到的值溢出，截断后乘积符号位为1，就不满足此表达式

D. x < 0 || -x <= 0
x < 0时为真，x >= 0时也为真

E. x > 0 || -x >= 0
x < 0时为真，x >= 0时也为真

F. x + y == uy + ux
x + y可正可负，uy + ux不可能为负，当x和y都为负数时且相加为负时，
uy + ux为正

G. x * ~y + uy * ux == -x
