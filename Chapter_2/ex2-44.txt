int x = foo();  /* Arbitrary vlaue */
int y = bar();  /* Arbitrary vlaue */

unsigned ux = x;
unsigned uy = y;

A. (x > 0) || (x - 1 < 0)  
假，当x为-2147483648(TMin32)时，x - 1为2147483647(TMax32)

B. (x & 7) != 7 || (x << 29 < 0) 
真，如果(x & 7) != 7的值为0，那么x倒数第三位x2等于1；当左移29位时，这个位将变成符号位

C. (x * x) >= 0
假，当x位65535(0xFFFF)时，x * x为-131071(0xFFFF0001)

D. x < 0 || -x <= 0
真，如果x是非负数，则-x是非正的

E. x > 0 || -x >= 0
假，当x为-2147483648(TMin32)，那么x和-x都为负数

F. x + y == uy + ux
真，补码和无符号乘法有相同的位级行为，而且它们是可交换的

G. x * ~y + uy * ux == -x
真，~y等于-y-1，uy*ux等于x*y，因此，等式左边等价于x*-y-x+x*y = -x