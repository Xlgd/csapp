double poly(double a[], double x, long degree) {
    long i;
    double result = a[0];
    double xpwr = x;
    for (i = 1; i <= degree; i++) {
        result += a[i] * xpwr;
        xpwr = x * xpwr;
    }
    return result;
}

A. 执行n次加法，2n次乘法
B. 这里限制性能的计算是反复地计算表达式 xpwr = x * xpwr。这需要一个浮点乘法，
   耗费5个时钟周期，并且直到前一次迭代完成，下一次迭代的计算才能开始。两次连续迭代之间
   对result的更新只需要一个浮点加法，耗费3个时钟周期。